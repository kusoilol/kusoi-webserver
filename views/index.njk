{% extends "layout.njk" %}

{% block title %}KUSOI - Главная{% endblock %}

{% block header %}{% endblock %}

{% block content %}
<p>
    Привет!
    Сегодня будем играть в подобие <a href="">Battle City</a> (a.k.a Tank 1990). 
    Ваша задача состоит в том, чтобы написать бота для этой игры!
    Вы будете управлять танчиком, ваша задача - уничтожить танк противника и не дать подбить себя.
</p>
<h2>
    Формат взаимодействия...
</h2>
<p>
    ... похож или почти польностью совпадает с принципом работы интерактивных задач на codeforces.com.
    Если вы не знаете, что это такое — не страшно, сейчас покажу.
</p>
<p>
    Ваша программа считывает ввод от тестирующей системы через стандартный поток ввода (input() в Python),
    думает над ходом, и затем выводит действие, которое должен совершить танчик.
    Так повторяется, пока кто-то не будет уничтожен или пока не будет суммарно сделано 100 ходов. 
</p>
<p>
    В самом начале вводится <i>n</i> и <i>m</i> — высота и ширина поля.
    В каждой из следующих <i>n</i> строк будет содержаться <i>m</i> символов — описание поля.
    Точка (.) означает свободное место, а решетка (#) — стену, через которую запрещено двигаться.
</p>
<p>
    Каждый ход (включая первый) вы получаете описание текущего состояния сущностей — танчиков и выпущенных снарядов.
    Сначала в строку через пробел вводятся координаты вашего танчика и текущее направление движения в формате "x y dir",
    где <i>x</i> принимает значения от 0 до <i>m</i>-1 и будет увеличиваться, если идти вправо,
    <i>y</i> принимает значения от 0 до <i>n</i>-1 и увеличивается при движении вниз (таким образом верхняя левая клетка будет иметь координаты <i>x</i>=0 <i>y</i>=0).
    Направление <i>dir</i> может принимать значения <i>up</i>, <i>down</i>, <i>left</i> и <i>right</i>.
</p>
<p>
    В следующей строке в таком же формате задается положение и направление танчика противника.
</p>
<p>
    Затем на вход подается единственное в строке число <i>k</i> — количество снарядов на поле.
    В следующих <i>k</i> строках в таком же формате ("x y dir") подается состояние пулек.
    После каждого хода пульки будут сдвигаться на 1 клетку по направлению движения.
</p>
<p>
    Если <i>cmd</i> = <i>data</i>, то в следующих строках будет находится текущее состояние вашего танчика, танчика противника, количество пулек и само описание снарядов в вышеописанном формате.
</p>
<p>
    Гарантируется, что <i>setup</i> вводится только один раз в начале дуэли.
</p>

<p>
    После того, как вы на очередном ходу считали входные данные, вы должны вывести команду — 2 буквы:
    <ol>
        <li><i>fw</i> (forward) — движение вперед.</li>
        <li><i>bw</i> (backward) — движение назад.</li>
        <li><i>rr</i> (rotate right) — поворот направо.</li>
        <li><i>rl</i> (rotate left) — поворот налево.</li>
        <li><i>sh</i> (shoot) — выстрел.</li>
        <li><i>ff</i> (shoot) — самоуничтожение.</li>
    </ol>
</p>

<h2>Пример взаимодействия</h2>
7 7 <br>
.......<br>
.#.#.#.<br>
.......<br>
.#####.<br>
.......<br>
.#.#.#.<br>
.......<br>
6 0 down<br>
0 6 up<br>
0<br>
>>> fw<br>
6 1 down<br>
0 5 up<br>
0<br>
{% endblock %}
